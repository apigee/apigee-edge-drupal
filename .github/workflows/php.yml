name: test_and_lint

on:
  push:
    branches: [ 2.x, github-action ]
  pull_request:
    branches: [ 2.x ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    name: "Tests | PHP ${{ matrix.php-version }} | Drupal ${{ matrix.drupal }}"
    strategy:
      matrix:
        experimental: [false]
        php-version:
          - "7.4"
        drupal:
          - "^9.0"
#         include:
#           - php-version: "8.0"
#             drupal: "^9.0"
#             experimental: true
#           - php-version: "8.1"
#             drupal: "10.0.x-dev"
#             experimental: true

    steps:
    - uses: actions/checkout@v2

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}

    - name: "Install PHP"
      uses: "shivammathur/setup-php@v2"
      with:
        coverage: "none"
        php-version: "${{ matrix.php-version }}"
        tools: composer:v2
        extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, gd, exif, iconv, opcache, imagick

    - name: Setup Drupal
      uses: bluehorndigital/setup-drupal@v1.0.3
      with:
        version: ${{ matrix.drupal }}
        path: ~/drupal
    - name: "Allow plugins and dev dependencies"
      run: |
        cd ~/drupal
        composer config --no-plugins allow-plugins.composer/installers true
        composer config --no-plugins allow-plugins.drupal/core-composer-scaffold true
        composer config --no-plugins allow-plugins.drupal/core-project-message true
        composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
        composer config minimum-stability dev
        composer require squizlabs/php_codesniffer --dev --no-update
        composer require phpstan/phpstan --dev --no-update

    - name: "set the version alias for self"
      run: |
        if [ "${{ github.event_name }}" == 'pull_request' ]; then
          echo ::set-output name=VERSION_ALIAS::dev-"${{ github.sha }}"
        else
          echo ::set-output name=VERSION_ALIAS::2.x-dev
        fi
      id: branch_alias
    - name: "require apigee_edge"
      run: |
        cd ~/drupal
        composer config repositories.forked-apigee_edge vcs https://github.com/apigee/apigee-edge-drupal
        composer require drupal/apigee_edge "${{ steps.branch_alias.outputs.VERSION_ALIAS }} as 2.1.99" --with-all-dependencies

#        COMPOSER_MEMORY_LIMIT=-1 composer require drupal/apigee_edge "${{ steps.branch_alias.outputs.VERSION_ALIAS }} as 2.1.99"  --with-all-dependencies
#     - name: "Install dependencies"
#       run: "composer update --no-progress --prefer-dist"

    - name: "PHPCS"
      run: |
        cd ~/drupal
        cp web/modules/contrib/apigee_edge/phpcs.xml.dist .
        vendor/bin/phpcs --standard=./phpcs.xml.dist web/modules/contrib/apigee_edge -p -s -n --colors
#     - name: "PHPStan"
#       run: "php vendor/bin/phpstan analyze"
    - name: "PHPUnit"
      run: |
        cd ~/drupal
        vendor/bin/phpunit -c core --verbose --color --group apigee_edge

