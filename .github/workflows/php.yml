name: test_and_lint
env:
  MYSQL_ROOT_PASSWORD: drupal
  SIMPLETEST_DB: "sqlite://localhost/test.sqlite"
  SIMPLETEST_DB2: "mysql://drupal:drupal@localhost:3306/drupal"
  SIMPLETEST_BASE_URL: "http://127.0.0.1:80"

on:
  push:
    branches: [ 2.x, github-action ]
  pull_request:
    branches: [ 2.x ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    name: "Tests | PHP ${{ matrix.php-version }} | Drupal ${{ matrix.drupal }}"
    strategy:
      matrix:
        experimental: [false]
        php-version:
          - "7.4"
        drupal-core:
          - "9.2.x"

    services:
      mariadb:
        image: mariadb:10.5
        env:
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_DATABASE: drupal
          MYSQL_ROOT_PASSWORD: drupal
        ports:
          - 3306:3306
#         include:
#           - php-version: "8.0"
#             drupal: "9.3.x"
#             experimental: true
#           - php-version: "8.1"
#             drupal: "10.0.x-dev"
#             experimental: true

    steps:
#    - uses: actions/checkout@v2

#    - name: Cache Composer packages
#      id: composer-cache
#      uses: actions/cache@v2
#      with:
#        path: vendor
#        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-php-${{ matrix.php-version }}

    - name: "Install PHP"
      uses: "shivammathur/setup-php@v2"
      with:
        coverage: "none"
        php-version: "${{ matrix.php-version }}"
        tools: composer:v2
        extensions: dom, curl, libxml, mbstring, zip, pdo, mysql, pdo_mysql, bcmath, gd, exif, iconv, opcache, imagick

    - name: Checkout Drupal core
      run: |
        git clone --depth 1 --branch ${{ matrix.drupal-core }} http://git.drupal.org/project/drupal.git/ drupal
        mkdir -p drupal/modules/contrib/apigee_edge
 
    - name: Checkout apigee_edge module
      uses: actions/checkout@v3.0.0
      with:
        path: drupal/modules/contrib/apigee_edge

#    - name: Setup Drupal
#      uses: bluehorndigital/setup-drupal@v1.0.3
#      with:
#        version: ${{ matrix.drupal }}
#        path: ~/drupal

    - name: "Allow plugins and dev dependencies"
      run: |
        cd drupal
        composer config --no-plugins allow-plugins.composer/installers true
        composer config --no-plugins allow-plugins.drupal/core-composer-scaffold true
        composer config --no-plugins allow-plugins.drupal/core-project-message true
        composer config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
        composer config --no-plugins allow-plugins.wikimedia/composer-merge-plugin true
        composer config --no-plugins allow-plugins.composer/package-versions-deprecated true
        composer config --no-plugins allow-plugins.cweagans/composer-patches true
        composer config minimum-stability dev
        composer require drupal/rules:3.0.0-alpha7
        composer require wikimedia/composer-merge-plugin
        composer config --json extra.merge-plugin.require '["modules/contrib/apigee_edge/composer.json"]'
        composer update --with-all-dependencies

    - name: "PHPCS"
      run: |
        cd drupal
        cp modules/contrib/apigee_edge/phpcs.xml.dist .
        vendor/bin/phpcs --standard=./phpcs.xml.dist modules/contrib/apigee_edge -p -s -n --colors
#     - name: "PHPStan"
#       run: "php vendor/bin/phpstan analyze"
    - name: "PHPUnit"
      run: |
        cd drupal
        composer require --dev phpspec/prophecy-phpunit:^2
        cp modules/contrib/apigee_edge/phpunit.core.xml.dist .
        vendor/bin/phpunit -c core --verbose --color --group apigee_edge_kernel

